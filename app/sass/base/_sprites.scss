/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$camera-name: 'camera';
$camera-x: 0px;
$camera-y: 0px;
$camera-offset-x: 0px;
$camera-offset-y: 0px;
$camera-width: 48px;
$camera-height: 48px;
$camera-total-width: 80px;
$camera-total-height: 72px;
$camera-image: '../img/sprites.png';
$camera: (0px, 0px, 0px, 0px, 48px, 48px, 80px, 72px, '../img/sprites.png', 'camera', );
$landscape-name: 'landscape';
$landscape-x: 0px;
$landscape-y: 48px;
$landscape-offset-x: 0px;
$landscape-offset-y: -48px;
$landscape-width: 24px;
$landscape-height: 24px;
$landscape-total-width: 80px;
$landscape-total-height: 72px;
$landscape-image: '../img/sprites.png';
$landscape: (0px, 48px, 0px, -48px, 24px, 24px, 80px, 72px, '../img/sprites.png', 'landscape', );
$picture-name: 'picture';
$picture-x: 48px;
$picture-y: 0px;
$picture-offset-x: -48px;
$picture-offset-y: 0px;
$picture-width: 32px;
$picture-height: 32px;
$picture-total-width: 80px;
$picture-total-height: 72px;
$picture-image: '../img/sprites.png';
$picture: (48px, 0px, -48px, 0px, 32px, 32px, 80px, 72px, '../img/sprites.png', 'picture', );
$spritesheet-width: 80px;
$spritesheet-height: 72px;
$spritesheet-image: '../img/sprites.png';
$spritesheet-sprites: ($camera, $landscape, $picture, );
$spritesheet: (80px, 72px, '../img/sprites.png', $spritesheet-sprites, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
